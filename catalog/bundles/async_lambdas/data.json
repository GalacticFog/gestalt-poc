{
  "context": {
    "org": {
      "fqon": "training"
    },
    "workspace": {
      "id": "ee124766-ec97-4e98-bd5e-d4f25d418d06",
      "name": "demo"
    },
    "environment": {
      "id": "9ae9ca75-5119-46ab-9a85-598f7644ce18",
      "name": "async_lambdas"
    }
  },
  "config": {
    "laser_url": "lsr.a8b52224-11d8-443a-a419-e1682e4c09dc.marathon.l4lb.thisdcos.directory",
    "laser_provider": "/root/laser",
    "gwm_provider": "/root/gwm",
    "kong_provider": "/root/kong"
  },
  "options": {
    "_": [
      "apply"
    ],
    "d": "tmp/gestalt-poc/Training/Setup/async_lambdas",
    "directory": "tmp/gestalt-poc/Training/Setup/async_lambdas",
    "config": "tmp/gestalt-poc/Training/Setup/config.yaml",
    "render-bundle": true,
    "renderBundle": true,
    "$0": "/Users/ericgf/Workspace/gestalt-fog-cli/cli/bin/fog"
  },
  "resources": [
    {
      "resource_type": "Gestalt::Resource::ApiEndpoint",
      "name": "/lambda1_async",
      "description": "Factorial Example Endpoint",
      "properties": {
        "resource": "/lambda1_async",
        "methods": [
          "GET",
          "PUT",
          "POST",
          "DELETE"
        ],
        "plugins": {
          "rateLimit": {
            "enabled": false,
            "perMinute": 60
          },
          "gestaltSecurity": {
            "enabled": false,
            "users": [],
            "groups": []
          }
        },
        "synchronous": false,
        "implementation_type": "lambda",
        "implementation_id": "#{Lambda lambda1}"
      },
      "context": {
        "api": {
          "id": "#{Api #{Config api}}"
        }
      }
    },
    {
      "resource_type": "Gestalt::Resource::Node::Lambda",
      "name": "lambda1",
      "description": "Calls a sequence of downstream URLs and returns the result",
      "properties": {
        "apiendpoints": [],
        "provider": {
          "id": "#{Provider #{Config laser_provider}}",
          "locations": []
        },
        "secrets": [],
        "public": true,
        "pre_warm": 0,
        "code": "Y29uc3QgcmVxdWVzdCA9IHJlcXVpcmUoJ3JlcXVlc3QtcHJvbWlzZS1uYXRpdmUnKTsKCm1vZHVsZS5leHBvcnRzLmhhbmRsZXIgPSBhc3luYyAoZXZlbnQsIGNvbnRleHQsIGNhbGxiYWNrKSA9PiB7CgogICAgY29uc3QgZGF0YSA9IHsKICAgICAgICBldmVudDogSlNPTi5wYXJzZShldmVudCksCiAgICAgICAgY29udGV4dDogSlNPTi5wYXJzZShjb250ZXh0KQogICAgfQoKCiAgICAvLyBjb25zdCByZXNwb25zZSA9IHsKICAgIC8vICAgICBzdGF0dXNDb2RlOiAyMDEsCiAgICAvLyAgICAgaGVhZGVyczoge30sCiAgICAvLyAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgIC8vIH0KCiAgICBjYWxsYmFjayhudWxsLCBkYXRhKTsKfTs=",
        "cpus": 0.1,
        "code_type": "code",
        "headers": {
          "Accept": "text/plain",
          "Content-Type": "text/plain"
        },
        "periodic_info": {},
        "timeout": 60,
        "handler": "handler",
        "runtime": "nodejs",
        "env": {},
        "memory": 128
      }
    },
    {
      "resource_type": "Gestalt::Resource::Api",
      "name": "#{Config api}",
      "description": "Async Lambdas Demo API",
      "properties": {
        "provider": {
          "locations": [
            "#{Provider #{Config kong_provider}}"
          ],
          "id": "#{Provider #{Config gwm_provider}}"
        }
      }
    }
  ]
}
